using AdventOfCode2019;
using AdventOfCode2019Tests.Properties;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;

namespace AdventOfCode2019Tests
{
    [TestClass]
    public class Day10SolverTests
    {
        [TestMethod]
        [DataRow(0, 0, 5, 5, 1, 1)]
        [DataRow(0, 0, -5, -5, -1, -1)]
        [DataRow(1, 0, 3, 4, 1, 2)]
        [DataRow(3, 4, 1, 0, -1, -2)]
        public void GetDistanceFactorTest(int xRefferenceAsteroidPoint, int yRefferenceAsteroidPoint, int xOtherAsteroidPoint, int yOtherAsteroidPoint, int xDistanceFactor, int yDistanceFactor)
        {
            Asteroid refferenceAsteroid = new Asteroid(xRefferenceAsteroidPoint, yRefferenceAsteroidPoint);
            Asteroid otherAsteroid = new Asteroid(xOtherAsteroidPoint, yOtherAsteroidPoint);

            Assert.AreEqual((xDistanceFactor, yDistanceFactor), refferenceAsteroid.GetDistanceFactor(otherAsteroid));
        }

        [TestMethod]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 1, 0, 7)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 4, 0, 7)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 0, 2, 6)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 1, 2, 7)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 2, 2, 7)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 3, 2, 7)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 4, 2, 5)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 4, 3, 7)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 3, 4, 8)]
        [DataRow(".#..#\n.....\n#####\n....#\n...##", 4, 4, 7)]
        public void HowManyAsteroidsTest(string input, int xPoint, int yPoint, int numberOfAsteroids)
        {
            Assert.AreEqual(numberOfAsteroids, (new Day10Solver(input)).HowManyVisibleAsteroids(xPoint, yPoint));
        }

        [TestMethod]
        [DataRow(".#....#####...#..\n##...##.#####..##\n##...#...#.#####.\n..#.....#...###..\n..#.#.....#....##", 1, 8, 1)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 1, 11, 12)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 2, 12, 1)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 3, 12, 2)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 10, 12, 8)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 20, 16, 0)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 50, 16, 9)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 100, 10, 16)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 199, 9, 6)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 200, 8, 2)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 201, 10, 9)]
        [DataRow(".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##", 299, 11, 1)]
        public void GetTheNVaporizedAsteroidTest(string input, int vaporizedAsteroidNumber, int vaporizedXPoint, int vaporizedYPoint)
        {
            Assert.AreEqual((vaporizedXPoint, vaporizedYPoint), (new Day10Solver(input)).GetTheNVaporizedAsteroid(vaporizedAsteroidNumber));
        }

        [TestMethod]
        [DataRow(8, 1, 90)]
        [DataRow(12, 3, 0)]
        [DataRow(9, 2, 45)]
        [DataRow(2, 3, 180)]
        [DataRow(7, 4, 225)]
        [DataRow(9, 1, 63)]
        [DataRow(10, 4, 333)]
        [DataRow(0, 2, 172)]
        [DataRow(0, 1, 165)]
        [DataRow(1, 0, 156)]
        [DataRow(1, 2, 171)]
        [DataRow(11, 1, 33)]
        public void GetAngleWithMonitoringStationTest(int x, int y, float angle)
        {
            Assert.AreEqual(angle, MathF.Floor((new Day10Solver()).GetAngleBetweenTwoAsteroids(new Asteroid(8, 3), new Asteroid(x, y))));
        }


        [TestMethod]
        public void Part1Test()
        {
            Assert.AreEqual(319, (new Day10Solver(Resources.Day10Input)).SolvePart1());
        }

        [TestMethod]
        public void Part2Test()
        {
            Assert.AreEqual(517, (new Day10Solver(Resources.Day10Input)).SolvePart2());
        }
    }
}
